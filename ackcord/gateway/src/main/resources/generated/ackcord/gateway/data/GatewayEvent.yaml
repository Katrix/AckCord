name: GatewayEvent
defType: ObjectOnly
imports:
  - ackcord.data._
objectExtends: [ "GatewayEventBase.TopMixin" ]
innerTypes:
  - name: Dispatch
    defType: Class
    extends: [ "GatewayEventBase[GatewayDispatchEvent.UnknownGatewayDispatchEvent]", "GatewayEventBase.DispatchMixin" ]
    objectExtends: [ "GatewayEventBase.GatewayEventCompanionMixin[Dispatch]" ]
    fields:
      2.0.x:
        op:
          type: GatewayEventOp
          default: GatewayEventOp.Dispatch # 0
        d: GatewayDispatchEvent.UnknownGatewayDispatchEvent
        s: Int
        t: GatewayDispatchType
    innerTypes:
      - defType: Freeform
        content: "override def op: GatewayEventOp = GatewayEventOp.Dispatch"

  - name: Heartbeat
    defType: Class
    extends: [ "GatewayEventBase[Option[Int]]" ]
    objectExtends: [ "GatewayEventBase.GatewayEventCompanionMixin[Heartbeat]" ]
    fields:
      2.0.x:
        op:
          type: GatewayEventOp
          default: GatewayEventOp.Heartbeat # 1
        d:
          type: Int
          withNull: true
    innerTypes:
      - defType: Freeform
        content: "override def op: GatewayEventOp = GatewayEventOp.Heartbeat"

  - name: Identify
    defType: Class
    extends: [ "GatewayEventBase[GatewayEvent.Identify.Data]" ]
    objectExtends: [ "GatewayEventBase.GatewayEventCompanionMixin[Identify]" ]
    fields:
      2.0.x:
        op:
          type: GatewayEventOp
          default: GatewayEventOp.Identify # 2
        d: GatewayEvent.Identify.Data
    innerTypes:
      - defType: Freeform
        content: "override def op: GatewayEventOp = GatewayEventOp.Identify"

      - name: Data
        defType: Class
        fields:
          2.0.x:
            token:
              type: String
              documentation: The auth token
            properties:
              type: Map[String, String]
              documentation: Misc connection properties
            compress:
              type: Boolean
              withUndefined: true
              default: "false"
              documentation: If the connection supports compression
            largeThreshold:
              type: Int
              jsonName: large_threshold
              withUndefined: true
              documentation: A number between 50 and 250 indicating when offline members should no longer be sent.
            shard:
              type: Seq[Int]
              withUndefined: true
              documentation: Array of two intergers, those being [shardId, numShards] indicating how sharding should be done
            presence:
              type: GatewayEvent.UpdatePresence.Data
              withUndefined: true
              documentation: Initial presence info
            intents:
              type: GatewayIntents
              documentation: The gateway intents indicating what events we want to receive

  - name: UpdatePresence
    defType: Class
    extends: [ "GatewayEventBase[GatewayEvent.UpdatePresence.Data]" ]
    objectExtends: [ "GatewayEventBase.GatewayEventCompanionMixin[UpdatePresence]" ]
    fields:
      2.0.x:
        op:
          type: GatewayEventOp
          default: GatewayEventOp.UpdatePresence # 3
        d: GatewayEvent.UpdatePresence.Data
    innerTypes:
      - defType: Freeform
        content: "override def op: GatewayEventOp = GatewayEventOp.UpdatePresence"

      - name: Data
        defType: Class
        fields:
          2.0.x:
            since:
              type: Int
              withNull: true
              documentation: Unix time (millis) of when client went idle, or null if client is not idle
            activities:
              type: Seq[GatewayDispatchEvent.Activity]
              documentation: Client's activities
            status:
              type: Status
              documentation: Client's status
            afk:
              type: Boolean
              documentation: If the Client is AFK



  - name: UpdateVoiceState
    defType: Class
    extends: [ "GatewayEventBase[GatewayEvent.UpdateVoiceState.Data]" ]
    objectExtends: [ "GatewayEventBase.GatewayEventCompanionMixin[UpdateVoiceState]" ]
    fields:
      2.0.x:
        op:
          type: GatewayEventOp
          default: GatewayEventOp.UpdateVoiceState # 4
        d: GatewayEvent.UpdateVoiceState.Data
    innerTypes:
      - defType: Freeform
        content: "override def op: GatewayEventOp = GatewayEventOp.UpdateVoiceState"

      - name: Data
        defType: Class
        fields:
          2.0.x:
            guildId:
              type: GuildId
              jsonName: guild_id
              documentation: Id of the guild
            channelId:
              type: ChannelId
              jsonName: channel_id
              withNull: true
              documentation: Id of the voice channel to join, or null if disconnecting
            selfMute:
              type: Boolean
              jsonName: self_mute
              documentation: If the client is muted
            selfDeaf:
              type: Boolean
              jsonName: self_deaf
              documentation: If the client is deafened

  - name: Resume
    defType: Class
    extends: [ "GatewayEventBase[GatewayEvent.Resume.Data]" ]
    objectExtends: [ "GatewayEventBase.GatewayEventCompanionMixin[Resume]" ]
    fields:
      2.0.x:
        op:
          type: GatewayEventOp
          default: GatewayEventOp.Resume # 6
        d: GatewayEvent.Resume.Data
    innerTypes:
      - defType: Freeform
        content: "override def op: GatewayEventOp = GatewayEventOp.Resume"

      - name: Data
        defType: Class
        fields:
          2.0.x:
            token:
              type: String
              documentation: Session token
            sessionId:
              type: String
              jsonName: session_id
              documentation: Session id
            seq:
              type: Int
              documentation: Last sequence number received

  - name: Reconnect
    defType: Class
    extends: [ "GatewayEventBase[Unit]", "GatewayEventBase.UnitMixin" ]
    objectExtends: [ "GatewayEventBase.GatewayEventCompanionMixin[Reconnect]" ]
    fields:
      2.0.x:
        op:
          type: GatewayEventOp
          default: GatewayEventOp.Reconnect # 7
    innerTypes:
      - defType: Freeform
        content: "override def op: GatewayEventOp = GatewayEventOp.Reconnect"

  - name: RequestGuildMembers
    defType: Class
    extends: [ "GatewayEventBase[GatewayEvent.RequestGuildMembers.Data]" ]
    objectExtends: [ "GatewayEventBase.GatewayEventCompanionMixin[RequestGuildMembers]" ]
    fields:
      2.0.x:
        op:
          type: GatewayEventOp
          default: GatewayEventOp.RequestGuildMembers # 8
        d: GatewayEvent.RequestGuildMembers.Data

    innerTypes:
      - defType: Freeform
        content: "override def op: GatewayEventOp = GatewayEventOp.RequestGuildMembers"

      - name: Data
        defType: Class
        fields:
          2.0.x:
            guildId:
              type: GuildId
              jsonName: guild_id
              documentation: Id of the guild to get members in
            query:
              type: String
              withUndefined: true
              documentation: Query for usernames that begin with the string
            limit:
              type: Int
              documentation: Max amount of members to return
            presences:
              type: Boolean
              withUndefined: true
              documentation: If presences should be included as well
            userIds:
              type: Seq[UserId]
              jsonName: user_ids
              withUndefined: true
              documentation: Specific users to fetch
            nonce:
              type: String
              withUndefined: true
              documentation: Nonce to identify chunk responses
              verification:
                max_length: 32

  - name: InvalidSession
    defType: Class
    extends: [ "GatewayEventBase[Boolean]" ]
    objectExtends: [ "GatewayEventBase.GatewayEventCompanionMixin[InvalidSession]" ]
    fields:
      2.0.x:
        op:
          type: GatewayEventOp
          default: GatewayEventOp.InvalidSession # 9
        d: Boolean
    innerTypes:
      - defType: Freeform
        content: "override def op: GatewayEventOp = GatewayEventOp.InvalidSession"

  - name: Hello
    defType: Class
    extends: [ "GatewayEventBase[GatewayEvent.Hello.Data]" ]
    objectExtends: [ "GatewayEventBase.GatewayEventCompanionMixin[Hello]" ]
    fields:
      2.0.x:
        op:
          type: GatewayEventOp
          default: GatewayEventOp.Hello # 10
        d: GatewayEvent.Hello.Data
    innerTypes:
      - defType: Freeform
        content: "override def op: GatewayEventOp = GatewayEventOp.Hello"

      - name: Data
        defType: Class
        fields:
          2.0.x:
            heartbeat_interval: Int

  - name: HeartbeatACK
    defType: Class
    extends: [ "GatewayEventBase[Unit]", "GatewayEventBase.UnitMixin" ]
    objectExtends: [ "GatewayEventBase.GatewayEventCompanionMixin[HeartbeatACK]" ]
    fields:
      2.0.x:
        op:
          type: GatewayEventOp
          default: GatewayEventOp.HeartbeatACK # 11
    innerTypes:
      - defType: Freeform
        content: "override def op: GatewayEventOp = GatewayEventOp.HeartbeatACK"

  - name: Unknown
    defType: Class
    extends: [ "GatewayEventBase[Json]" ]
    fields:
      2.0.x:
        op: GatewayEventOp
        d: Json
