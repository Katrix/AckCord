defType: Multiple
imports:
  - ackcord.data._
  - ackcord.requests.ChannelRequests
  - ackcord.requests.CreateMessageLikeMixin
innerTypes:
  - name: Interaction
    defType: Class
    fields:
      2.0.x:
        id:
          type: InteractionId
          documentation: ID of the interaction

        application_id:
          type: ApplicationId
          documentation: ID of the application this interaction is for

        tpe:
          jsonName: type
          type: Interaction.InteractionType
          documentation: Type of interaction

        data:
          type: Interaction.InteractionData
          withUndefined: true
          documentation: Interaction data payload

        guild_id:
          type: GuildId
          withUndefined: true
          documentation: Guild that the interaction was sent from

        channel:
          type: RawChannel #Also partial
          withUndefined: true
          documentation: Channel that the interaction was sent from

        channel_id:
          type: TextChannelId
          withUndefined: true
          documentation: Channel that the interaction was sent from

        member:
          type: GuildMember
          withUndefined: true
          documentation: Guild member data for the invoking user, including permissions

        user:
          type: User
          withUndefined: true
          documentation: User object for the invoking user, if invoked in a DM

        token:
          type: String
          documentation: Continuation token for responding to the interaction

        version:
          type: Int
          documentation: Read-only property, always 1

        message:
          type: Message
          withUndefined: true
          documentation: For components, the message they were attached to

        app_permissions:
          type: Permissions
          withUndefined: true
          documentation: Bitwise set of permissions the app or bot has within the channel
            the interaction was sent from

        locale:
          type: String
          withUndefined: true
          documentation: Selected language of the invoking user

        guild_locale:
          type: String
          withUndefined: true
          documentation: Guild's preferred locale, if invoked in a guild

        entitlements:
          type: Seq[Entitlement]
          documentation: For monetized apps, any entitlements for the invoking user, representing access to premium SKUs

    innerTypes:
      - name: InteractionType
        defType: Enum
        type: Int
        values:
          PING:
            value: "1"
            documentation: "1"

          APPLICATION_COMMAND:
            value: "2"
            documentation: "2"

          MESSAGE_COMPONENT:
            value: "3"
            documentation: "3"

          APPLICATION_COMMAND_AUTOCOMPLETE:
            value: "4"
            documentation: "4"

          MODAL_SUBMIT:
            value: "5"
            documentation: "5"

      - defType: Freeform
        content: |-
          sealed trait InteractionData extends DiscordObject
          object InteractionData extends DiscordObjectCompanion[InteractionData] {
            override def makeRaw(json: Json, cache: Map[String, Any]): InteractionData ={
              val c = json.hcursor
              if (c.downField("components").succeeded) ModalSubmitData.makeRaw(json, cache)
              else if (c.downField("component_type").succeeded) MessageComponentData.makeRaw(json, cache)
              else ApplicationCommandData.makeRaw(json, cache)
            }
          }

      - name: ApplicationCommandData
        defType: Class
        extends: [InteractionData]
        fields:
          2.0.x:
            id:
              type: CommandId
              documentation: The ID of the invoked command

            name:
              type: String
              documentation: The name of the invoked command

            tpe:
              jsonName: type
              type: ApplicationCommand.ApplicationCommandType
              documentation: The type of the invoked command

            resolved:
              type: Interaction.ResolvedData
              withUndefined: true
              documentation: Converted users + roles + channels + attachments

            options:
              type: Seq[ApplicationCommandInteractionDataOption]
              withUndefined: true
              documentation: The params + values from the user

            guild_id:
              type: GuildId
              withUndefined: true
              documentation: The id of the guild the command is registered to

            target_id:
              type: RawSnowflake
              withUndefined: true
              documentation: Id of the user or message targeted by a user or message command

      - name: MessageComponentData
        defType: Class
        extends: [InteractionData]
        fields:
          2.0.x:
            custom_id:
              type: String
              documentation: The custom_id of the component

            component_type:
              type: Component.ComponentType
              documentation: The type of the component

            selectValues:
              jsonName: values
              type: Seq[Component.SelectOption]
              withUndefined: true
              documentation: Values the user selected in a select menu component

            resolved:
              type: Interaction.ResolvedData
              withUndefined: true
              documentation: Resolved entities from selected options

      - name: ModalSubmitData
        defType: Class
        extends: [InteractionData]
        fields:
          2.0.x:
            custom_id:
              type: String
              documentation: The custom_id of the modal

            components:
              type: Seq[Component]
              documentation: The values submitted by the user

      - name: ResolvedData
        defType: Class
        fields:
          2.0.x:
            users:
              type: Map[UserId, User]
              withUndefined: true
              documentation: The ids and User objects

            members:
              type: Map[UserId, GuildMember.Partial] # We know what is missing here, but specified missing is harder to deal with
              withUndefined: true
              documentation: The ids and partial Member objects

            roles:
              type: Map[RoleId, Role]
              withUndefined: true
              documentation: The ids and Role objects

            channels:
              type: Map[GuildChannelId, ResolvedChannel]
              withUndefined: true
              documentation: The ids and partial Channel objects

            messages:
              type: Map[MessageId, Message]
              withUndefined: true
              documentation: The ids and partial Message objects

            attachments:
              type: Map[Snowflake[Attachment], Attachment]
              withUndefined: true
              documentation: The ids and attachment objects

      - name: ResolvedChannel
        defType: Class
        fields:
          2.0.x:
            id: GuildChannelId
            name: String
            tpe:
              jsonName: type
              type: Channel.ChannelType
            permissions: Permissions

            thread_metadata:
              type: Channel.ThreadMetadata
              withUndefined: true

            parent_id:
              type: GuildChannelId
              withUndefined: true

      - name: ApplicationCommandInteractionDataOption
        defType: Class
        documentation: >-
          All options have names, and an option can either be a parameter and
          input value--in which case value will be set--or it can denote a
          subcommand or group--in which case it will contain a top-level key and
          another array of options.


          value and options are mutually exclusive.
        fields:
          2.0.x:
            name:
              type: String
              documentation: Name of the parameter

            tpe:
              jsonName: type
              type: ApplicationCommand.ApplicationCommandOption.ApplicationCommandOptionType
              documentation: ApplicationCommand.ApplicationCommandOptionType

            value:
              type: StringOrIntOrDoubleOrBoolean
              withUndefined: true
              documentation: Value of the option resulting from user input

            options:
              type: Seq[ApplicationCommandInteractionDataOption]
              withUndefined: true
              documentation: Present if this option is a group or subcommand

            focused:
              type: Boolean
              withUndefined: true
              documentation: True if this option is the currently focused option for
                autocomplete

  - name: MessageInteraction
    defType: Class
    documentation: This is sent on the message object when the message is a response
      to an Interaction without an existing message.
    fields:
      2.0.x:
        id:
          type: InteractionId
          documentation: ID of the interaction

        tpe:
          jsonName: type
          type: Interaction.InteractionType
          documentation: Type of interaction

        name:
          type: String
          documentation: Name of the application command, including subcommands and
            subcommand groups

        user:
          type: User
          documentation: User who invoked the interaction

        member:
          type: GuildMember.Partial
          withUndefined: true
          documentation: Member who invoked the interaction in the guild

  - name: InteractionResponse
    defType: Class
    fields:
      2.0.x:
        tpe:
          jsonName: type
          type: InteractionResponse.InteractionCallbackType
          documentation: The type of response

        data:
          type: InteractionResponse.InteractionCallbackData
          withUndefined: true
          documentation: An optional response message

    innerTypes:
      - name: InteractionCallbackType
        defType: Enum
        type: Int
        values:
          PONG:
            value: "1"
            documentation: ACK a Ping

          CHANNEL_MESSAGE_WITH_SOURCE:
            value: "4"
            documentation: Respond to an interaction with a message

          DEFERRED_CHANNEL_MESSAGE_WITH_SOURCE:
            value: "5"
            documentation: ACK an interaction and edit a response later, the user sees a
              loading state

          DEFERRED_UPDATE_MESSAGE:
            value: "6"
            documentation: For components, ACK an interaction and edit the original message
              later; the user does not see a loading state

          UPDATE_MESSAGE:
            value: "7"
            documentation: For components, edit the message the component was attached to

          APPLICATION_COMMAND_AUTOCOMPLETE_RESULT:
            value: "8"
            documentation: Respond to an autocomplete interaction with suggested choices

          MODAL:
            value: "9"
            documentation: Respond to an interaction with a popup modal

          PREMIUM_REQUIRED:
            value: "10"
            documentation: >-
              Respond to an interaction with an upgrade button, only available for apps with monetization enabled
              
              Not available for MODAL_SUBMIT and PING interactions.

      - defType: Freeform
        content: |-
          sealed trait InteractionCallbackData extends DiscordObject
          object InteractionCallbackData extends DiscordObjectCompanion[InteractionCallbackData] {
            override def makeRaw(json: Json, cache: Map[String, Any]): InteractionCallbackData = {
              // Best effort guess
              val c = json.hcursor
              if (c.downField("choices").succeeded) AutocompleteData.makeRaw(json, cache)
              else if (c.downField("title").succeeded) ModalData.makeRaw(json, cache)
              else MessageData.makeRaw(json, cache)
            }
          }

      - name: MessageData
        defType: Class
        extends: [InteractionCallbackData]
        objectExtends: ["CreateMessageLikeMixin[MessageData]"]
        allUndefined: true
        fields:
          2.0.x:
            tts:
              type: Boolean
              documentation: Is the response TTS

            content:
              type: String
              documentation: Message content

            embeds:
              type: Seq[OutgoingEmbed]
              documentation: Supports up to 10 embeds

            allowed_mentions:
              type: AllowedMentions
              documentation: Allowed mentions object

            flags:
              type: Message.MessageFlags
              documentation: Message flags combined as a bitfield (only SUPPRESS_EMBEDS and
                EPHEMERAL can be set)

            components:
              type: Seq[Component]
              documentation: Message components

            attachments:
              type: Seq[ChannelRequests.MessageCreateEditAttachment]
              documentation: Attachment objects with filename and description

      - name: AutocompleteData
        defType: Class
        extends: [InteractionCallbackData]
        fields:
          2.0.x:
            choices:
              type: Seq[ApplicationCommand.ApplicationCommandOption.ApplicationCommandOptionChoice]
              documentation: Autocomplete choices (max of 25 choices)

      - name: ModalData
        defType: Class
        extends: [InteractionCallbackData]
        fields:
          2.0.x:
            custom_id:
              type: String
              documentation: A developer-defined identifier for the modal, max 100 characters

            title:
              type: String
              documentation: The title of the popup modal, max 45 characters

            components:
              type: Seq[Component]
              documentation: Between 1 and 5 (inclusive) components that make up the modal
